{
  "version": 3,
  "sources": ["../ts/doomsday.ts"],
  "sourcesContent": ["//\n// Pure functions\n//\n\n// Function to determine leap years\nfunction leap(year: number): boolean {\n  if (year % 400 === 0) {\n    return true;\n  } else if (year % 100 === 0) {\n    return false;\n  } else if (year % 4 === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to calculate Doomsday\nfunction doomsday(year: number): number {\n  const shortYearStr = String(year).slice(-2);\n  let shortYear = Number(shortYearStr);\n\n  if (shortYear % 2 != 0) {\n    shortYear += 11;\n  }\n\n  shortYear /= 2;\n\n  if (shortYear % 2 != 0) {\n    shortYear += 11;\n  }\n\n  shortYear = Math.abs((shortYear % 7) - 7);\n\n  const centuryOffsets: Record<number, number> = {\n    1800: 6,\n    1900: 4,\n    2000: 3,\n    2100: 1,\n  };\n  const century = Math.floor(year / 100) * 100;\n  shortYear += centuryOffsets[century] ?? 3; // Default to our century\n\n  shortYear %= 7;\n\n  return shortYear;\n}\n\n// Function to associate results with weekdays\nfunction weekday(doomsdayNum: number): string {\n  const weekdays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n  ];\n\n  return weekdays[doomsdayNum % 7];\n}\n\n//\n// Stateful stuff\n//\n\n// Get elements\nconst yearSelect = document.getElementById(\"yearSelect\") as HTMLSelectElement;\nconst submitBtn = document.getElementById(\"submitButton\") as HTMLButtonElement;\nconst yearReit = document.getElementById(\"yearReiteration\") as HTMLSpanElement;\nconst leapDisplay = document.getElementById(\"leapDisplay\") as HTMLSpanElement;\nconst doomDisplay = document.getElementById(\"doom-display\") as HTMLSpanElement;\nconst janDate = document.getElementById(\"janDate\") as HTMLSpanElement;\nconst febDate = document.getElementById(\"febDate\") as HTMLSpanElement;\n\n// Set select to current year on page load\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\nyearSelect.value = String(currentYear);\n\n// Primary, combined function\nfunction doom() {\n  let year = Number(yearSelect.value);\n  year = year < 1800 ? 1800 : year > 2199 ? 2199 : year;\n  const isLeap = leap(year);\n  const doomsdayNum = doomsday(year);\n  const doomsdayName = weekday(doomsdayNum);\n\n  yearReit.innerHTML = String(year);\n  leapDisplay.innerHTML = isLeap\n    ? \"<strong>is</strong>\"\n    : \"is <strong>not</strong>\";\n  janDate.innerText = isLeap ? \"4\" : \"3\";\n  febDate.innerText = isLeap ? \"29\" : \"28\";\n\n  doomDisplay.innerHTML = `<strong>${doomsdayName}</strong>`;\n\n  yearSelect.blur();\n}\n\n// Run primary function on page load\ndoom();\n\n//\n// Event handling\n//\n\n// Function to run doom if Enter key is hit in select field\nfunction submitOnEnter(event: KeyboardEvent) {\n  if (event.key === \"Enter\") {\n    event.preventDefault();\n    doom();\n  }\n}\n\n// Click and keydown event handlers\nsubmitBtn.addEventListener(\"click\", doom);\nyearSelect.addEventListener(\"keydown\", submitOnEnter);\n"],
  "mappings": "AAKA,SAAS,KAAKA,EAAuB,CACnC,OAAIA,EAAO,MAAQ,EACV,GACEA,EAAO,MAAQ,EACjB,GACEA,EAAO,IAAM,CAK1B,CAGA,SAAS,SAASA,EAAsB,CACtC,MAAMC,EAAe,OAAOD,CAAI,EAAE,MAAM,EAAE,EAC1C,IAAIE,EAAY,OAAOD,CAAY,EAE/BC,EAAY,GAAK,IACnBA,GAAa,IAGfA,GAAa,EAETA,EAAY,GAAK,IACnBA,GAAa,IAGfA,EAAY,KAAK,IAAKA,EAAY,EAAK,CAAC,EAExC,MAAMC,EAAyC,CAC7C,KAAM,EACN,KAAM,EACN,IAAM,EACN,KAAM,CACR,EACMC,EAAU,KAAK,MAAMJ,EAAO,GAAG,EAAI,IACzC,OAAAE,GAAaC,EAAeC,CAAO,GAAK,EAExCF,GAAa,EAENA,CACT,CAGA,SAAS,QAAQG,EAA6B,CAW5C,MAViB,CACf,WACA,SACA,SACA,UACA,YACA,WACA,QACF,EAEgBA,EAAc,CAAC,CACjC,CAOA,MAAM,WAAa,SAAS,eAAe,YAAY,EACjD,UAAY,SAAS,eAAe,cAAc,EAClD,SAAW,SAAS,eAAe,iBAAiB,EACpD,YAAc,SAAS,eAAe,aAAa,EACnD,YAAc,SAAS,eAAe,cAAc,EACpD,QAAU,SAAS,eAAe,SAAS,EAC3C,QAAU,SAAS,eAAe,SAAS,EAG3C,YAAc,IAAI,KAClB,YAAc,YAAY,YAAY,EAC5C,WAAW,MAAQ,OAAO,WAAW,EAGrC,SAAS,MAAO,CACd,IAAIL,EAAO,OAAO,WAAW,KAAK,EAClCA,EAAOA,EAAO,KAAO,KAAOA,EAAO,KAAO,KAAOA,EACjD,MAAMM,EAAS,KAAKN,CAAI,EAClBK,EAAc,SAASL,CAAI,EAC3BO,EAAe,QAAQF,CAAW,EAExC,SAAS,UAAY,OAAOL,CAAI,EAChC,YAAY,UAAYM,EACpB,sBACA,0BACJ,QAAQ,UAAYA,EAAS,IAAM,IACnC,QAAQ,UAAYA,EAAS,KAAO,KAEpC,YAAY,UAAY,WAAWC,CAAY,YAE/C,WAAW,KAAK,CAClB,CAGA,KAAK,EAOL,SAAS,cAAcC,EAAsB,CACvCA,EAAM,MAAQ,UAChBA,EAAM,eAAe,EACrB,KAAK,EAET,CAGA,UAAU,iBAAiB,QAAS,IAAI,EACxC,WAAW,iBAAiB,UAAW,aAAa",
  "names": ["year", "shortYearStr", "shortYear", "centuryOffsets", "century", "doomsdayNum", "isLeap", "doomsdayName", "event"]
}
